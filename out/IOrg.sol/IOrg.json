{"abi":[{"type":"function","name":"cancelSchedule","inputs":[{"name":"username","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"cancelStream","inputs":[{"name":"username","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createSchedule","inputs":[{"name":"username","type":"string","internalType":"string"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"token","type":"address","internalType":"address"},{"name":"oneTimePayoutDate","type":"uint40","internalType":"uint40"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"createStream","inputs":[{"name":"username","type":"string","internalType":"string"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"token","type":"address","internalType":"address"},{"name":"endStream","type":"uint40","internalType":"uint40"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"editSchedule","inputs":[{"name":"username","type":"string","internalType":"string"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"editStream","inputs":[{"name":"username","type":"string","internalType":"string"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"emergencyWithdraw","inputs":[{"name":"tokenAddr","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getSchedule","inputs":[{"name":"username","type":"string","internalType":"string"}],"outputs":[{"name":"schedule","type":"tuple","internalType":"struct IOrg.Schedule","components":[{"name":"token","type":"address","internalType":"address"},{"name":"nextPayout","type":"uint40","internalType":"uint40"},{"name":"isOneTime","type":"bool","internalType":"bool"},{"name":"active","type":"bool","internalType":"bool"},{"name":"amount","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getStream","inputs":[{"name":"username","type":"string","internalType":"string"}],"outputs":[{"name":"stream","type":"tuple","internalType":"struct IOrg.Stream","components":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"token","type":"address","internalType":"address"},{"name":"lastPayout","type":"uint40","internalType":"uint40"},{"name":"endStream","type":"uint40","internalType":"uint40"},{"name":"active","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getSubscriptionDetails","inputs":[],"outputs":[{"name":"period","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"requestSchedulePayout","inputs":[{"name":"username","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"requestStreamPayout","inputs":[{"name":"username","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"updateOrgName","inputs":[{"name":"newName","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ETHReceived","inputs":[{"name":"name","type":"string","indexed":false,"internalType":"string"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OrgNameChange","inputs":[{"name":"name","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"PaymentScheduleActive","inputs":[{"name":"username","type":"string","indexed":true,"internalType":"string"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"nextPayout","type":"uint40","indexed":true,"internalType":"uint40"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"PaymentScheduleCancelled","inputs":[{"name":"username","type":"string","indexed":true,"internalType":"string"}],"anonymous":false},{"type":"event","name":"PaymentStreamActive","inputs":[{"name":"username","type":"string","indexed":true,"internalType":"string"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"startStream","type":"uint40","indexed":true,"internalType":"uint40"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"PaymentStreamCancelled","inputs":[{"name":"username","type":"string","indexed":true,"internalType":"string"}],"anonymous":false},{"type":"event","name":"Payout","inputs":[{"name":"username","type":"string","indexed":true,"internalType":"string"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ScheduleUpdated","inputs":[{"name":"username","type":"string","indexed":true,"internalType":"string"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"StreamUpdated","inputs":[{"name":"username","type":"string","indexed":true,"internalType":"string"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"cancelSchedule(string)":"d09f3703","cancelStream(string)":"d5f9042b","createSchedule(string,uint256,address,uint40)":"cf3792d7","createStream(string,uint256,address,uint40)":"4a548ad8","editSchedule(string,uint256)":"ad0527b7","editStream(string,uint256)":"34c73713","emergencyWithdraw(address)":"6ff1c9bc","getSchedule(string)":"72840f0e","getStream(string)":"5e587d7a","getSubscriptionDetails()":"0d5de6df","requestSchedulePayout(string)":"18d226e8","requestStreamPayout(string)":"a92af8e1","updateOrgName(string)":"32b9f6c6"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ETHReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"OrgNameChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint40\",\"name\":\"nextPayout\",\"type\":\"uint40\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentScheduleActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"PaymentScheduleCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint40\",\"name\":\"startStream\",\"type\":\"uint40\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentStreamActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"PaymentStreamCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Payout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ScheduleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StreamUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"cancelSchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"cancelStream\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint40\",\"name\":\"oneTimePayoutDate\",\"type\":\"uint40\"}],\"name\":\"createSchedule\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint40\",\"name\":\"endStream\",\"type\":\"uint40\"}],\"name\":\"createStream\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"editSchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"editStream\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"getSchedule\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint40\",\"name\":\"nextPayout\",\"type\":\"uint40\"},{\"internalType\":\"bool\",\"name\":\"isOneTime\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrg.Schedule\",\"name\":\"schedule\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"getStream\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint40\",\"name\":\"lastPayout\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"endStream\",\"type\":\"uint40\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct IOrg.Stream\",\"name\":\"stream\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSubscriptionDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"requestSchedulePayout\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"requestStreamPayout\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newName\",\"type\":\"string\"}],\"name\":\"updateOrgName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for interacting with the Org contract, which handles payments and subscription management.\",\"events\":{\"OrgNameChange(string)\":{\"params\":{\"name\":\"The new name of the org\"}},\"PaymentScheduleActive(string,address,uint40,uint256)\":{\"details\":\"Emitted when a payment schedule becomes active.\",\"params\":{\"amount\":\"The amount to be paid at the next payout.\",\"nextPayout\":\"The timestamp of the next scheduled payout.\",\"token\":\"The address of the token used for the payments.\",\"username\":\"The username associated with the payment schedule.\"}},\"PaymentScheduleCancelled(string)\":{\"details\":\"Emitted when a payment schedule is canceled.\",\"params\":{\"username\":\"The username associated with the canceled schedule.\"}},\"PaymentStreamActive(string,address,uint40,uint256)\":{\"details\":\"Emitted when a payment stream becomes active.\",\"params\":{\"amount\":\"The amount to be paid at the next payout.\",\"startStream\":\"The timestamp of the stream payout.\",\"token\":\"The address of the token used for the payments.\",\"username\":\"The username associated with the payment stream.\"}},\"PaymentStreamCancelled(string)\":{\"details\":\"Emitted when a payment stream is canceled.\",\"params\":{\"username\":\"The username associated with the canceled stream.\"}},\"Payout(string,address,uint256)\":{\"details\":\"Emitted when a payout is successfully processed.\",\"params\":{\"amount\":\"The amount paid out.\",\"token\":\"The token address used for the payout.\",\"username\":\"The username associated with the stream.\"}},\"ScheduleUpdated(string,uint256)\":{\"details\":\"Emitted when a payment schedule is updated with a new amount. This event logs the updated schedule information for a given username.\",\"params\":{\"amount\":\"The new amount set for the schedule.\",\"username\":\"The username of the user whose schedule has been updated.\"}},\"StreamUpdated(string,uint256)\":{\"details\":\"Emitted when a stream is updated with a new amount. This event logs the updated stream information for a given username.\",\"params\":{\"amount\":\"The new amount set for the stream.\",\"username\":\"The username of the user whose stream has been updated.\"}}},\"kind\":\"dev\",\"methods\":{\"cancelSchedule(string)\":{\"details\":\"Computes and transfers the prorated amount for the current interval, then disables the schedule.\",\"params\":{\"username\":\"The username associated with the payment schedule.\"}},\"cancelStream(string)\":{\"details\":\"Disables the specified stream and stops further payouts.\",\"params\":{\"username\":\"The username associated with the payment stream.\"}},\"createSchedule(string,uint256,address,uint40)\":{\"details\":\"This function allows an organization to set up recurring payments to an address.      It supports both stream (for payments every second) and schedule (for monthly payments).\",\"params\":{\"amount\":\"The amount to be paid on a scheduled basis.\",\"oneTimePayoutDate\":\"Timestamp of a payment to be made once As would a contractor payment would be made.\",\"token\":\"Address of token to pay in\",\"username\":\"The username of the recipient who will receive the payment.\"}},\"createStream(string,uint256,address,uint40)\":{\"details\":\"Sets up a stream that pays tokens to a recipient every second, starting immediately and ending at a specified time.\",\"params\":{\"amount\":\"The amount of tokens paid to the recipient every second.\",\"endStream\":\"The timestamp when the stream ends.\",\"token\":\"The address of the token to be streamed.\",\"username\":\"The username of the recipient who will receive the stream.\"}},\"editSchedule(string,uint256)\":{\"details\":\"Edits the amount for a schedule payment for a given user. Only the owner can call this function. Reverts if the amount is zero, the payment schedule is not active, or the next payout is within 3 days.\",\"params\":{\"amount\":\"The new amount to set for the schedule. Requirements: - The caller must be the owner of the contract. - The amount must be non-zero. - The schedule for the given username must be active. - The time difference between the current timestamp and the next payout must be greater than 3 days. Emits: - A `ScheduleUpdated` event with the updated schedule information.\",\"username\":\"The username of the user whose schedule is to be edited.\"}},\"editStream(string,uint256)\":{\"details\":\"Edits the amount for an active stream for a given user. Only the owner can call this function. Reverts if the amount is zero or the payment stream is not active.\",\"params\":{\"amount\":\"The new amount to set for the stream. Requirements: - The caller must be the owner of the contract. - The amount must be non-zero. - The stream for the given username must be active. Emits: - A `StreamUpdated` event with the updated stream information.\",\"username\":\"The username of the user whose stream is to be edited.\"}},\"emergencyWithdraw(address)\":{\"details\":\"This function can only be called by the Paynest owner to withdraw tokens      that were mistakenly sent to the Org contract.\",\"params\":{\"tokenAddr\":\"The address of the token to be withdrawn.\"}},\"getSchedule(string)\":{\"details\":\"This function can be used in the frontend to revalidate data.\",\"params\":{\"username\":\"The username to query schedule against.\"},\"returns\":{\"schedule\":\"The schedule information.\"}},\"getStream(string)\":{\"details\":\"This function can be used in the frontend to revalidate data.\",\"params\":{\"username\":\"The username to query stream against.\"},\"returns\":{\"stream\":\"The stream information.\"}},\"getSubscriptionDetails()\":{\"details\":\"This function returns details about the organization's active subscription.\",\"returns\":{\"period\":\"The current subscription period.\"}},\"requestSchedulePayout(string)\":{\"details\":\"Allows anyone to request a payout of funds from the contract.\",\"params\":{\"username\":\"The username of the recipient who will receive the payment.\"}},\"requestStreamPayout(string)\":{\"details\":\"Allows anyone to request a payout of funds from the contract.\",\"params\":{\"username\":\"The username of the recipient who will receive the payment.\"}},\"updateOrgName(string)\":{\"custom:security\":\"Ensures the caller is owner.\",\"details\":\"This function allows an organization to update its name or identifier for internal purposes.\",\"params\":{\"newName\":\"The new name to assign to the organization.\"}}},\"title\":\"Org Interface\",\"version\":1},\"userdoc\":{\"events\":{\"OrgNameChange(string)\":{\"notice\":\"Event for Organization Name tracking Off chain\"}},\"kind\":\"user\",\"methods\":{\"cancelSchedule(string)\":{\"notice\":\"Cancels an active payment schedule with prorated payout for the current interval.\"},\"cancelStream(string)\":{\"notice\":\"Cancels an active payment stream.\"},\"createSchedule(string,uint256,address,uint40)\":{\"notice\":\"Creates a payment stream or schedule for an employee or recipient.\"},\"createStream(string,uint256,address,uint40)\":{\"notice\":\"Creates a real-time payment stream for a recipient.\"},\"emergencyWithdraw(address)\":{\"notice\":\"Allows the Paynest owner to withdraw any funds that were accidentally sent to the Org contract.\"},\"getSchedule(string)\":{\"notice\":\"Retrieves the current schedule payment details for a user.\"},\"getStream(string)\":{\"notice\":\"Retrieves the current stream details for a user.\"},\"getSubscriptionDetails()\":{\"notice\":\"Retrieves the current subscription details for the organization.\"},\"requestSchedulePayout(string)\":{\"notice\":\"Requests a payout of scheduled funds.\"},\"requestStreamPayout(string)\":{\"notice\":\"Requests a payout of accumulated funds.\"},\"updateOrgName(string)\":{\"notice\":\"Allows the organization to update its name or other relevant identifiers.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IOrg.sol\":\"IOrg\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/interfaces/IOrg.sol\":{\"keccak256\":\"0x454b2c36b5a272654999c1ec5c9fb08dd0af2b579f9cdd4ac399422ebfc0da6b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3be710d05fdf854dd1468aaf4b598c830729010cb483c39a89bf236d1aff3588\",\"dweb:/ipfs/QmdXTSAUBBiD1quhiLLCkcUeaBuYZwwsTzCG1mNxdCXaam\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"ETHReceived","anonymous":false},{"inputs":[{"internalType":"string","name":"name","type":"string","indexed":false}],"type":"event","name":"OrgNameChange","anonymous":false},{"inputs":[{"internalType":"string","name":"username","type":"string","indexed":true},{"internalType":"address","name":"token","type":"address","indexed":true},{"internalType":"uint40","name":"nextPayout","type":"uint40","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"PaymentScheduleActive","anonymous":false},{"inputs":[{"internalType":"string","name":"username","type":"string","indexed":true}],"type":"event","name":"PaymentScheduleCancelled","anonymous":false},{"inputs":[{"internalType":"string","name":"username","type":"string","indexed":true},{"internalType":"address","name":"token","type":"address","indexed":true},{"internalType":"uint40","name":"startStream","type":"uint40","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"PaymentStreamActive","anonymous":false},{"inputs":[{"internalType":"string","name":"username","type":"string","indexed":true}],"type":"event","name":"PaymentStreamCancelled","anonymous":false},{"inputs":[{"internalType":"string","name":"username","type":"string","indexed":true},{"internalType":"address","name":"token","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"Payout","anonymous":false},{"inputs":[{"internalType":"string","name":"username","type":"string","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"ScheduleUpdated","anonymous":false},{"inputs":[{"internalType":"string","name":"username","type":"string","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"StreamUpdated","anonymous":false},{"inputs":[{"internalType":"string","name":"username","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"cancelSchedule"},{"inputs":[{"internalType":"string","name":"username","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"cancelStream"},{"inputs":[{"internalType":"string","name":"username","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint40","name":"oneTimePayoutDate","type":"uint40"}],"stateMutability":"payable","type":"function","name":"createSchedule"},{"inputs":[{"internalType":"string","name":"username","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint40","name":"endStream","type":"uint40"}],"stateMutability":"payable","type":"function","name":"createStream"},{"inputs":[{"internalType":"string","name":"username","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"editSchedule"},{"inputs":[{"internalType":"string","name":"username","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"editStream"},{"inputs":[{"internalType":"address","name":"tokenAddr","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"emergencyWithdraw"},{"inputs":[{"internalType":"string","name":"username","type":"string"}],"stateMutability":"view","type":"function","name":"getSchedule","outputs":[{"internalType":"struct IOrg.Schedule","name":"schedule","type":"tuple","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint40","name":"nextPayout","type":"uint40"},{"internalType":"bool","name":"isOneTime","type":"bool"},{"internalType":"bool","name":"active","type":"bool"},{"internalType":"uint256","name":"amount","type":"uint256"}]}]},{"inputs":[{"internalType":"string","name":"username","type":"string"}],"stateMutability":"view","type":"function","name":"getStream","outputs":[{"internalType":"struct IOrg.Stream","name":"stream","type":"tuple","components":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint40","name":"lastPayout","type":"uint40"},{"internalType":"uint40","name":"endStream","type":"uint40"},{"internalType":"bool","name":"active","type":"bool"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getSubscriptionDetails","outputs":[{"internalType":"uint256","name":"period","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"username","type":"string"}],"stateMutability":"payable","type":"function","name":"requestSchedulePayout"},{"inputs":[{"internalType":"string","name":"username","type":"string"}],"stateMutability":"payable","type":"function","name":"requestStreamPayout"},{"inputs":[{"internalType":"string","name":"newName","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"updateOrgName"}],"devdoc":{"kind":"dev","methods":{"cancelSchedule(string)":{"details":"Computes and transfers the prorated amount for the current interval, then disables the schedule.","params":{"username":"The username associated with the payment schedule."}},"cancelStream(string)":{"details":"Disables the specified stream and stops further payouts.","params":{"username":"The username associated with the payment stream."}},"createSchedule(string,uint256,address,uint40)":{"details":"This function allows an organization to set up recurring payments to an address.      It supports both stream (for payments every second) and schedule (for monthly payments).","params":{"amount":"The amount to be paid on a scheduled basis.","oneTimePayoutDate":"Timestamp of a payment to be made once As would a contractor payment would be made.","token":"Address of token to pay in","username":"The username of the recipient who will receive the payment."}},"createStream(string,uint256,address,uint40)":{"details":"Sets up a stream that pays tokens to a recipient every second, starting immediately and ending at a specified time.","params":{"amount":"The amount of tokens paid to the recipient every second.","endStream":"The timestamp when the stream ends.","token":"The address of the token to be streamed.","username":"The username of the recipient who will receive the stream."}},"editSchedule(string,uint256)":{"details":"Edits the amount for a schedule payment for a given user. Only the owner can call this function. Reverts if the amount is zero, the payment schedule is not active, or the next payout is within 3 days.","params":{"amount":"The new amount to set for the schedule. Requirements: - The caller must be the owner of the contract. - The amount must be non-zero. - The schedule for the given username must be active. - The time difference between the current timestamp and the next payout must be greater than 3 days. Emits: - A `ScheduleUpdated` event with the updated schedule information.","username":"The username of the user whose schedule is to be edited."}},"editStream(string,uint256)":{"details":"Edits the amount for an active stream for a given user. Only the owner can call this function. Reverts if the amount is zero or the payment stream is not active.","params":{"amount":"The new amount to set for the stream. Requirements: - The caller must be the owner of the contract. - The amount must be non-zero. - The stream for the given username must be active. Emits: - A `StreamUpdated` event with the updated stream information.","username":"The username of the user whose stream is to be edited."}},"emergencyWithdraw(address)":{"details":"This function can only be called by the Paynest owner to withdraw tokens      that were mistakenly sent to the Org contract.","params":{"tokenAddr":"The address of the token to be withdrawn."}},"getSchedule(string)":{"details":"This function can be used in the frontend to revalidate data.","params":{"username":"The username to query schedule against."},"returns":{"schedule":"The schedule information."}},"getStream(string)":{"details":"This function can be used in the frontend to revalidate data.","params":{"username":"The username to query stream against."},"returns":{"stream":"The stream information."}},"getSubscriptionDetails()":{"details":"This function returns details about the organization's active subscription.","returns":{"period":"The current subscription period."}},"requestSchedulePayout(string)":{"details":"Allows anyone to request a payout of funds from the contract.","params":{"username":"The username of the recipient who will receive the payment."}},"requestStreamPayout(string)":{"details":"Allows anyone to request a payout of funds from the contract.","params":{"username":"The username of the recipient who will receive the payment."}},"updateOrgName(string)":{"custom:security":"Ensures the caller is owner.","details":"This function allows an organization to update its name or identifier for internal purposes.","params":{"newName":"The new name to assign to the organization."}}},"version":1},"userdoc":{"kind":"user","methods":{"cancelSchedule(string)":{"notice":"Cancels an active payment schedule with prorated payout for the current interval."},"cancelStream(string)":{"notice":"Cancels an active payment stream."},"createSchedule(string,uint256,address,uint40)":{"notice":"Creates a payment stream or schedule for an employee or recipient."},"createStream(string,uint256,address,uint40)":{"notice":"Creates a real-time payment stream for a recipient."},"emergencyWithdraw(address)":{"notice":"Allows the Paynest owner to withdraw any funds that were accidentally sent to the Org contract."},"getSchedule(string)":{"notice":"Retrieves the current schedule payment details for a user."},"getStream(string)":{"notice":"Retrieves the current stream details for a user."},"getSubscriptionDetails()":{"notice":"Retrieves the current subscription details for the organization."},"requestSchedulePayout(string)":{"notice":"Requests a payout of scheduled funds."},"requestStreamPayout(string)":{"notice":"Requests a payout of accumulated funds."},"updateOrgName(string)":{"notice":"Allows the organization to update its name or other relevant identifiers."}},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IOrg.sol":"IOrg"},"evmVersion":"paris","libraries":{}},"sources":{"src/interfaces/IOrg.sol":{"keccak256":"0x454b2c36b5a272654999c1ec5c9fb08dd0af2b579f9cdd4ac399422ebfc0da6b","urls":["bzz-raw://3be710d05fdf854dd1468aaf4b598c830729010cb483c39a89bf236d1aff3588","dweb:/ipfs/QmdXTSAUBBiD1quhiLLCkcUeaBuYZwwsTzCG1mNxdCXaam"],"license":"UNLICENSED"}},"version":1},"id":28}